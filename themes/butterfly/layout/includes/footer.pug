#footer-wrap
  if theme.footer.owner.enable
    - const currentYear = new Date().getFullYear()
    - const sinceYear = theme.footer.owner.since
    - const sourceType = theme.footer.owner.source ?? 1
    .copyright
      - const yearText = sinceYear && sinceYear != currentYear ? `&copy;${sinceYear} - ${currentYear}` : `&copy;${currentYear}`
      != yearText
      if sourceType === 1
        != ` By ${config.author}`
      else if sourceType === 2
        != '&nbsp;'
        svg(style="width:1.25em; height:1.25em;vertical-align:middle;" aria-hidden="true")
          use(xlink:href="#icon-Butterfly")
        != `&nbsp;${config.author}`

  if theme.footer.copyright
    .framework-info
      span= _p('footer.framework') + ' '
      a(href='https://hexo.io')= 'Hexo'
      span.footer-separator |
      span= _p('footer.theme') + ' '
      a(href='https://github.com/jerryc127/hexo-theme-butterfly')= 'Butterfly'
  if theme.footer.custom_text
    .footer_custom_text!= theme.footer.custom_text

  if theme.footer.runtime.enable
    #workboard
      - const { text, launch_time, offduty_img, offduty_description, work_img, work_description, working_start, working_end } = theme.footer.runtime
      img.workSituationImg(style="margin-top: 5px;")
      #runtimeTextTip
        | #{text}&nbsp
        span#runtime-days 0
        | &nbsp天&nbsp
        span#runtime-hours 00
        | &nbsp小时&nbsp
        span#runtime-minutes 00
        | &nbsp分&nbsp
        span#runtime-seconds 00
        | &nbsp秒

    script.
      (function () {
        const launchTimeStr = "#{launch_time}";
        const workingStart = #{working_start};
        const workingEnd = #{working_end};
        const launchTime = new Date(launchTimeStr || " ");

        if (isNaN(launchTime.getTime())) {
          console.error("Invalid launch time:", launchTimeStr);
          return;
        }

        function calculateElapsedTime() {
          const now = new Date();
          const elapsed = Math.floor((now - launchTime) / 1000);
          const days = Math.floor(elapsed / 86400);
          const hours = String(Math.floor((elapsed % 86400) / 3600)).padStart(2, "0");
          const minutes = String(Math.floor((elapsed % 3600) / 60)).padStart(2, "0");
          const seconds = String(elapsed % 60).padStart(2, "0");
          const nowHour = now.getHours();
          return { days, hours, minutes, seconds, nowHour };
        }

        function updateRuntime() {
          const { days, hours, minutes, seconds, nowHour } = calculateElapsedTime();
          const isWorkTime = nowHour >= workingStart && nowHour < workingEnd;

          const img = document.querySelector("#workboard .workSituationImg");
          if (img) {
            img.src = isWorkTime ? "#{work_img}" : "#{offduty_img}";
            img.title = isWorkTime ? "#{work_description}" : "#{offduty_description}";
            img.alt = isWorkTime ? "#{work_description}" : "#{offduty_description}";
          }

          document.getElementById("runtime-days").textContent = days;
          document.getElementById("runtime-hours").textContent = hours;
          document.getElementById("runtime-minutes").textContent = minutes;
          document.getElementById("runtime-seconds").textContent = seconds;
        }

        setInterval(updateRuntime, 1000);
      })();

  if theme.footer.wordcount
    .wordcount
      - let allword = totalcount(site)
      - allword = typeof allword === 'string' && allword.includes('k') ? parseFloat(allword) : Number(allword) / 1000
      - allword = isNaN(allword) ? 0 : allword
      - let displayWord = allword < 1 ? Math.round(allword * 1000) : `${allword.toFixed(1)}K`
      - let message = site.data.footer.wordcount_messages.find(item => allword < item.max)?.message || site.data.footer.default_message
      span= `${config.subtitle}已经写了 ${displayWord} 字，${message}`
