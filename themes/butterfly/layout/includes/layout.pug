- var globalPageType = getPageType(page, is_home)
- var htmlClassHideAside = theme.aside.enable && theme.aside.hide ? 'hide-aside' : ''
- page.aside = globalPageType === 'archive' ? theme.aside.display.archive: globalPageType === 'category' ? theme.aside.display.category : globalPageType === 'tag' ? theme.aside.display.tag : page.aside
- var hideAside = !theme.aside.enable || page.aside === false ? 'hide-aside' : ''
- var pageType = globalPageType === 'post' ? 'post' : 'page'
- pageType = page.type ? pageType + ' type-' + page.type : pageType

doctype html
html(lang=config.language data-theme=theme.display_mode class=htmlClassHideAside)
  head
    include ./head.pug
  body
    !=partial('includes/loading/index', {}, {cache: true})

    if theme.background
      #web_bg(style=getBgPath(theme.background))

    !=partial('includes/sidebar', {}, {cache: true})

    #body-wrap(class=pageType)
      include ./header/index.pug

      main#content-inner.layout(class=hideAside)
        if body
          div!= body
        else
          block content
          if theme.aside.enable && page.aside !== false
            include widget/index.pug

      - const footerBg = theme.footer_img
      - const footer_bg = footerBg ? footerBg === true ? bg_img : getBgPath(footerBg) : ''
      footer#footer(style=footer_bg)
        !=partial('includes/footer', {}, {cache: true})

    include ./rightside.pug
    include ./additional-js.pug
    
    #sw-update-popup.sw-update-popup
      .message-container
        p.message 发现新版本
        p.sub-message 点击更新以获取最新功能
      button.refresh-btn(onclick="window.location.reload()") 立即更新

    script.
      // Service Worker Registration
      if ('serviceWorker' in navigator) {
        const registerServiceWorker = async () => {
          try {
            const registration = await navigator.serviceWorker.register('/sw.js', {
              scope: '/',
              updateViaCache: 'none'
            });
            
            // 监听更新事件
            registration.addEventListener('updatefound', () => {
              const newWorker = registration.installing;
              newWorker.addEventListener('statechange', () => {
                if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                  document.getElementById('sw-update-popup').classList.add('show');
                }
              });
            });

            // 检查现有更新
            if (registration.waiting && navigator.serviceWorker.controller) {
              document.getElementById('sw-update-popup').classList.add('show');
            }
          } catch (error) {
            console.debug('Service Worker 注册失败:', error);
          }
        };

        window.addEventListener('load', registerServiceWorker);
        
        // 60秒后自动隐藏更新提示
        document.getElementById('sw-update-popup').addEventListener('show', () => {
          setTimeout(() => {
            const popup = document.getElementById('sw-update-popup');
            if (popup.classList.contains('show')) popup.classList.remove('show');
          }, 60000);
        });
      } 