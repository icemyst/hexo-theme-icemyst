- var globalPageType = getPageType(page, is_home)
- var htmlClassHideAside = theme.aside.enable && theme.aside.hide ? 'hide-aside' : ''
- page.aside = globalPageType === 'archive' ? theme.aside.display.archive: globalPageType === 'category' ? theme.aside.display.category : globalPageType === 'tag' ? theme.aside.display.tag : page.aside
- var hideAside = !theme.aside.enable || page.aside === false ? 'hide-aside' : ''
- var pageType = globalPageType === 'post' ? 'post' : 'page'
- pageType = page.type ? pageType + ' type-' + page.type : pageType

doctype html
html(lang=config.language data-theme=theme.display_mode class=htmlClassHideAside)
  head
    include ./head.pug
  body
    !=partial('includes/loading/index', {}, {cache: true})

    if theme.background
      #web_bg(style=getBgPath(theme.background))

    !=partial('includes/sidebar', {}, {cache: true})

    #body-wrap(class=pageType)
      include ./header/index.pug

      main#content-inner.layout(class=hideAside)
        if body
          div!= body
        else
          block content
          if theme.aside.enable && page.aside !== false
            include widget/index.pug

      - const footerBg = theme.footer_img
      - const footer_bg = footerBg ? footerBg === true ? bg_img : getBgPath(footerBg) : ''
      footer#footer(style=footer_bg)
        !=partial('includes/footer', {}, {cache: true})

    include ./rightside.pug
    include ./additional-js.pug

script.
  if ('serviceWorker' in navigator) {
    const SW_CONFIG = {
      path: '/sw.js',
      sessionKey: 'sw-session'
    };

    const handleNewServiceWorker = (registration) => {
      registration.addEventListener('updatefound', () => {
        const newWorker = registration.installing;
        
        newWorker?.addEventListener('statechange', () => {
          if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
            if (window.confirm('发现新内容可用，是否立即更新？')) {
              newWorker.postMessage({ type: 'SKIP_WAITING' });
            }
          }
        });
      });
    };

    const registerServiceWorker = async () => {
      try {
        const registration = await navigator.serviceWorker.register(SW_CONFIG.path);
        const isFirstVisit = !sessionStorage.getItem(SW_CONFIG.sessionKey);
        
        if (isFirstVisit) {
          sessionStorage.setItem(SW_CONFIG.sessionKey, 'true');
          return;
        }

        handleNewServiceWorker(registration);

        navigator.serviceWorker.addEventListener('controllerchange', () => {
          if (!isFirstVisit) window.location.reload();
        });
      } catch (error) {
        console.error('Service Worker 注册失败:', error);
      }
    };

    window.addEventListener('load', registerServiceWorker);
  }
