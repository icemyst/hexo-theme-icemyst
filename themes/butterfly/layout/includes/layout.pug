- var globalPageType = getPageType(page, is_home)
- var htmlClassHideAside = theme.aside.enable && theme.aside.hide ? 'hide-aside' : ''
- page.aside = globalPageType === 'archive' ? theme.aside.display.archive: globalPageType === 'category' ? theme.aside.display.category : globalPageType === 'tag' ? theme.aside.display.tag : page.aside
- var hideAside = !theme.aside.enable || page.aside === false ? 'hide-aside' : ''
- var pageType = globalPageType === 'post' ? 'post' : 'page'
- pageType = page.type ? pageType + ' type-' + page.type : pageType

doctype html
html(lang=config.language data-theme=theme.display_mode class=htmlClassHideAside)
  head
    include ./head.pug
  body
    !=partial('includes/loading/index', {}, {cache: true})

    if theme.background
      #web_bg(style=getBgPath(theme.background))

    !=partial('includes/sidebar', {}, {cache: true})

    #body-wrap(class=pageType)
      include ./header/index.pug

      main#content-inner.layout(class=hideAside)
        if body
          div!= body
        else
          block content
          if theme.aside.enable && page.aside !== false
            include widget/index.pug

      - const footerBg = theme.footer_img
      - const footer_bg = footerBg ? footerBg === true ? bg_img : getBgPath(footerBg) : ''
      footer#footer(style=footer_bg)
        !=partial('includes/footer', {}, {cache: true})

    include ./rightside.pug
    include ./additional-js.pug

script.
  if ('serviceWorker' in navigator) {
    // 使用 sessionStorage 来追踪首次加载和更新状态
    const firstLoad = !sessionStorage.getItem('sw-loaded');
    let updateHandled = false;

    window.addEventListener('load', () => {
      navigator.serviceWorker.register('/sw.js').then(registration => {
        // 首次加载时不触发更新
        if (firstLoad) {
          sessionStorage.setItem('sw-loaded', 'true');
          return;
        }

        // 检查更新
        registration.addEventListener('updatefound', () => {
          const newWorker = registration.installing;
          newWorker.addEventListener('statechange', () => {
            // 只在已安装且有控制器的情况下提示更新
            if (newWorker.state === 'installed' && 
                navigator.serviceWorker.controller && 
                !updateHandled) {
              updateHandled = true;
              const shouldUpdate = window.confirm('网站有新的内容，是否刷新查看？');
              if (shouldUpdate) {
                newWorker.postMessage({ type: 'SKIP_WAITING' });
              }
            }
          });
        });

        // 监听控制权变更
        let refreshing = false;
        navigator.serviceWorker.addEventListener('controllerchange', () => {
          if (!refreshing && !firstLoad) {
            refreshing = true;
            window.location.reload();
          }
        });
      }).catch(error => {
        console.error('Service Worker 注册失败:', error);
      });
    });
  }
