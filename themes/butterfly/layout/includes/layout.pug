- var globalPageType = getPageType(page, is_home)
- var htmlClassHideAside = theme.aside.enable && theme.aside.hide ? 'hide-aside' : ''
- page.aside = globalPageType === 'archive' ? theme.aside.display.archive: globalPageType === 'category' ? theme.aside.display.category : globalPageType === 'tag' ? theme.aside.display.tag : page.aside
- var hideAside = !theme.aside.enable || page.aside === false ? 'hide-aside' : ''
- var pageType = globalPageType === 'post' ? 'post' : 'page'
- pageType = page.type ? pageType + ' type-' + page.type : pageType

doctype html
html(lang=config.language data-theme=theme.display_mode class=htmlClassHideAside)
  head
    include ./head.pug
  body
    !=partial('includes/loading/index', {}, {cache: true})

    if theme.background
      #web_bg(style=getBgPath(theme.background))

    !=partial('includes/sidebar', {}, {cache: true})

    #body-wrap(class=pageType)
      include ./header/index.pug

      main#content-inner.layout(class=hideAside)
        if body
          div!= body
        else
          block content
          if theme.aside.enable && page.aside !== false
            include widget/index.pug

      - const footerBg = theme.footer_img
      - const footer_bg = footerBg ? footerBg === true ? bg_img : getBgPath(footerBg) : ''
      footer#footer(style=footer_bg)
        !=partial('includes/footer', {}, {cache: true})

    include ./rightside.pug
    include ./additional-js.pug

    script.
      if ('serviceWorker' in navigator) {
        // 网络状态配置
        const networkConfig = {
          online: !{JSON.stringify(site.data.network_status.online)},
          offline: !{JSON.stringify(site.data.network_status.offline)}
        };

        // 显示提示
        function showNotification(status) {
          const config = networkConfig[status];
          const message = config.messages[Math.floor(Math.random() * config.messages.length)];
          
          // 使用Snackbar显示通知
          Snackbar.show({
            text: message,
            pos: 'top-center',
            duration: status === 'offline' ? null : config.duration,
            backgroundColor: config.color,
            showAction: false,
            customClass: `network-status-${status}`
          });
        }

        // 监听网络状态变化
        window.addEventListener('online', () => {
          showNotification('online');
        });

        window.addEventListener('offline', () => {
          showNotification('offline');
        });

        // 监听 Service Worker 消息
        navigator.serviceWorker.addEventListener('message', (event) => {
          if (event.data.type === 'network-status') {
            showNotification(event.data.status);
          }
        });

        // 注册 Service Worker
        navigator.serviceWorker.register('/sw.js').then(() => {
          if (localStorage.getItem('install') !== 'true') {
            localStorage.setItem('install', 'true');
            location.reload();
          }
        });

        // 初始检查网络状态
        if (!navigator.onLine) {
          showNotification('offline');
        }
      }
